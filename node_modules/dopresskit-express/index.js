const fs = require("fs");
const download = require('download');
const mkdirp = require('mkdirp');
const unzip = require('unzip');
const path = require('path');

var EventEmitter = require('events').EventEmitter;
var phpExpress = require('php-express')({

  // assumes php is in your PATH
  binPath: 'php'
});

module.exports = new EventEmitter();
// automatic
module.exports.install = function (app) {
  // fs.exists is deprecated, so...
  fs.access('/press/install.php', function (err) {
    if (err) {
      // it doesn't exist, so make it!
      mkdirp('./press', function(err) {
        if (err) { console.log(err) }
      });
      // Fixed issue #1

      download('http://dopresskit.com/dopresskit_install.zip').then(data => {
	        fs.writeFileSync('./press/dopresskit_install.zip', data);
        }).then( function () {

        fs.createReadStream('./press/dopresskit_install.zip')
          .pipe(unzip.Parse())
          .on('entry', function (entry) {
            var fileName = entry.path;
            var type = entry.type; // 'Directory' or 'File'
            var size = entry.size;
              if (fileName === "install.php") {
                entry.pipe(fs.createWriteStream('./press/install.php'));
              } else {
                entry.autodrain();
              }
            });
          });
          
          // this library doesn't automatically clean-up the zip, so make sure to delete it yourself!

          app.set('views', './press');
          app.engine('php', phpExpress.engine);
          app.set('view engine', 'php');
          app.all(/.+\.php$/, phpExpress.router);

          module.exports.emit('complete');
    } else {
      // otherwise, don't download and instead prepare it for install

      app.set('views', './press');
      app.engine('php', phpExpress.engine);
      app.set('view engine', 'php');
      app.all(/.+\.php$/, phpExpress.router);

      module.exports.emit('complete');
    }
  });
}

// manual
module.exports.manualInstall = function (app, location) {
  // get the folder from which to start up
  let folder = path.parse(path.normalize(location)).dir;

  app.set('views', folder);
  app.engine('php', phpExpress.engine);
  app.set('view engine', 'php');
  app.all(/.+\.php$/, phpExpress.router);

  module.exports.emit('complete');
}
